---
# All the options for kitchen-vagrant enumerated and annotated
# options are illustrated where they most commonly would be set
driver:
  name: vagrant # test-kitchen default

  # If not set, check for the environment variable `VAGRANT_DEFAULT_PROVIDER`
  # If that is unset, default to `virtualbox`
  provider: virtualbox

  # If `true` check if the box is up-to-date
  # box_check_update: nil

  # If `true`, then SSL certificates from the server will not be verified.
  # box_download_insecure: nil

  # A relative path to a CA certificate bundle
  # for verifying endpoints with custom certificates
  # box_download_ca_cert: nil

  # Integer for setting custom boot timeout
  # boot_timeout: nil
  # Hash for passing k/v options to specific
  # providers for customization
  # emtpy by default
  # customize:
  #   memory: 1024
  #   cpuexecutioncap: 50
  # If `true`, allows GUI mode for Vagrant providers
  # that support this feature
  gui: false

  # If `true`, use "Linked Clones" or "Differencing Disk"
  # options for providers that support this feature
  # This can reduce disk usage and offer performance benefits.
  # linked_clone: nil

  # An Array of network customizations for the virtual machine.
  # Each Array element is itself an Array of arguments to be passed to the
  # config.vm.network method
  # network: []

  # An optional hook to run a command immediately prior to
  # the `vagrant up --no-provisioner` command being executed.
  # **CAUTION**
  # pre_create_command: nil

  # Enables Vagrant built-in provisioning
  # Useful in conjunction with `vagrantfiles`
  # provision: false

  # Hash for passing k/v options to Vagrant's SSH
  # configuration. Only needed for advanaced/custom
  # configuration. **CAUTION**
  # ssh: {}

  # An array of arrays that configure a synced folder
  # This value is automatically configured if using
  # the `cache_directory` option. Otherwise, empty.
  # synced_folders:
  #   - ["data/%{instance_name}", "/opt/instance_data"]
  #   - ["/host_path", "/vm_path", "create: true, type: :nfs"]

  # This should only need to get set if the Vagrant binary
  # isn't in the PATH or there is a specific location desired
  # vagrant_binary: "vagrant"

  # By default, use the Vagrantfile.erb that is part of the gem
  # otherwise use whatever the user provides here. **CAUTION**
  # vagrantfile_erb: Alt_Vagrantfile.erb

  # An array of paths to Vagrantfiles
  # Empty by default
  # vagrantfiles: []

  # We only set this to a path for a subset of known bento boxes
  # driver.windows_os? ? "/omnibus/cache" : "/tmp/omnibus/cache"
  # if set to `false` this will disable caching entirely
  # cache_directory: /tmp/omnibus/cache

  # Path to kitchen's global cache directory, primarily for caching
  # chef-client downlaods
  # Default is File.expand_path("~/.kitchen/cache")
  # kitchen_cache_directory: /Users/cheeseplus/.kitchen/cache

  # If `box` or `machine`, sets the respective value for
  # config.cache.scope. Any other truthy value yields `box`
  cachier: machine

provisioner:
  name: chef_zero
  accept_license: true
  product_name: chef
  product_version: 13.11.3
  install_strategy: once

  # We will grab boxes from bento on Vagrant Cloud
  # for a set of common platforms
  # - name: ubuntu-16.04
  # - name: centos-7
  # Otherwise for platforms we don't know, the box needs to exist locally
  # and be known to Vagrant, otherwise provide `box` or `box_url`
  # - name: openbsd-5.6
    # driver:
      # Versioned boxes from Vagrant Cloud can be utilized
      # `box_version` only works when `box` uses the Vagrant Cloud syntax
      # box: organization/openbsd-56
      # box_version: 1.2.3
      # If not using Vagrant Cloud, the box can be fetched
      # remotely via `http(s)://` or locally via `file://`
      # `box` requires a value
      # box: openbsd-5.6
      # box_url: http://url.tld/openbsd-5.6.box

platforms:
- name: amazonlinux
  driver:
    cachier: box

- name: amazonlinux-2
  driver:
    cachier: box

- name: debian-9
  driver:
    cachier: box

- name: centos-7
  driver:
    cachier: box

- name: fedora-latest
  driver:
    cachier: box

- name: ubuntu-16.04
  driver:
    cachier: box

- name: ubuntu-18
  driver:
    name: digitalocean
    private_networking: false
  driver_config:
    region: nyc1
    size: 2gb
# docker-ce currently not available beyond 19.04
# https://docs.docker.com/install/linux/docker-ce/ubuntu/
# cookbook-docker currently stops at bionic:
# https://github.com/chef-cookbooks/docker/blob/681ae77a95410dd3fa9b9c490f6a10676062f9e1/libraries/docker_installation_package.rb#L145
- name: ubuntu-18.04
  driver:
    cachier: box

verifier:
  name: inspec

suites:
  ###############################
  # ignite_installation resources
  ###############################
  - name: installation_ignite
    includes: [
      'ubuntu-16.04',
      'ubuntu-18'
    ]
    attributes:
      ignite:
        uri: 'ignt://weaveworks/?file=ignite&version=0.6.3#amd64'
    provisioner:
        policyfile: policies/installation_ignite.rb

  - name: installation_ignited
    includes: [
      'ubuntu-16.04',
      'ubuntu-18'
    ]
    attributes:
      ignite:
        uri: 'ignt://weaveworks/?file=ignited&version=0.6.3#amd64'
    provisioner:
        policyfile: policies/installation_ignited.rb

  - name: service
    includes: [
      'ubuntu-16.04',
      'ubuntu-18'
    ]
    attributes:
      ignite:
        uri: 'ignt://weaveworks/?file=ignited&version=0.6.3#amd64'
    provisioner:
        policyfile: policies/service.rb

  - name: installation_script_test
    includes: [
      'ubuntu-16.04',
      'ubuntu-18.04'
    ]
    attributes:
      docker:
        repo: 'test'
    run_list:
    - recipe[ignite_test::installation_script]

  - name: installation_script_experimental
    includes: [
      'ubuntu-16.04',
      'ubuntu-18.04'
    ]
    attributes:
      docker:
        repo: 'experimental'
    run_list:
    - recipe[ignite_test::installation_script]

  - name: installation_package
    attributes:
      docker:
        version: '19.03.5'
    run_list:
    - recipe[ignite_test::installation_package]

  - name: installation_tarball
    attributes:
      docker:
        version: '19.03.5'
    run_list:
    - recipe[ignite_test::installation_tarball]
    includes: [
      'ubuntu-16.04',
      'ubuntu-18.04'
    ]

  ##################
  # resource testing
  ##################

  - name: resources
    attributes:
      docker:
        version: '19.03.5'
    run_list:
    - recipe[ignite_test::default]
    - recipe[ignite_test::image]
    - recipe[ignite_test::container]
    - recipe[ignite_test::exec]
    - recipe[ignite_test::plugin]

  - name: network
    includes: [
      'ubuntu-16.04',
    ]
    attributes:
      docker:
        version: '19.03.5'
    run_list:
    - recipe[ignite_test::default]
    - recipe[ignite_test::network]

  - name: volume
    includes: [
      'ubuntu-16.04',
    ]
    attributes:
      docker:
        version: '19.03.5'
    run_list:
    - recipe[ignite_test::default]
    - recipe[ignite_test::volume]

  - name: registry
    includes: [
      'ubuntu-16.04',
    ]
    attributes:
      docker:
        version: '19.03.5'
    run_list:
    - recipe[ignite_test::default]
    - recipe[ignite_test::registry]

  #############################
  # quick service smoke testing
  #############################

  - name: smoke
    includes: [
      'ubuntu-16.04',
      'ubuntu-18.04'
    ]
    run_list:
    - recipe[ignite_test::smoke]